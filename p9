package BM23AI170;
import java.util.ArrayList;

interface StackOperations {
    void push(int item);
    int pop();
    void display();
}


class FixedLengthStack implements StackOperations {
    private int[] stack;
    private int top;

    public FixedLengthStack(int size) {
        stack = new int[size];
        top = -1;
    }

    public void push(int item) {
        if (top == stack.length - 1) {
            System.out.println("Stack Overflow (Fixed)");
        } else {
            stack[++top] = item;
        }
    }

    public int pop() {
        if (top == -1) {
            System.out.println("Stack Underflow (Fixed)");
            return -1;
        } else {
            return stack[top--];
        }
    }

    public void display() {
        if (top == -1) {
            System.out.println("Stack is empty (Fixed)");
            return;
        }
        System.out.print("Fixed Stack: ");
        for (int i = 0; i <= top; i++) {
            System.out.print(stack[i] + " ");
        }
        System.out.println();
    }
}



class DynamicLengthStack implements StackOperations {
    private ArrayList<Integer> stack;

    public DynamicLengthStack() {
        stack = new ArrayList<>();
    }

    public void push(int item) {
        stack.add(item);
    }

    public int pop() {
        if (stack.isEmpty()) {
            System.out.println("Stack Underflow (Dynamic)");
            return -1;
        } else {
            return stack.remove(stack.size() - 1);
        }
    }

    public void display() {
        if (stack.isEmpty()) {
            System.out.println("Stack is empty (Dynamic)");
            return;
        }
        System.out.print("Dynamic Stack: ");
        for (int item : stack) {
            System.out.print(item + " ");
        }
        System.out.println();
    }
}


public class StackDemo {
    public static void main(String[] args) {
        StackOperations stack;


        stack = new FixedLengthStack(3);
        stack.push(10);
        stack.push(20);
        stack.push(30);
        stack.push(40);
        stack.display();
        stack.pop();
        stack.display();

        System.out.println();

        
        stack = new DynamicLengthStack();
        stack.push(100);
        stack.push(200);
        stack.push(300);
        stack.display();
        stack.pop();
        stack.display();
    }
}
